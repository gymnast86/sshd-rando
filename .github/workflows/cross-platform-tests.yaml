name: Cross Platform Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  generate-logs:
    strategy:
      matrix:
        include:
          - name: windows
            os: windows-latest
            architecture: x64
          - name: macos-x64
            os: macos-13
            architecture: x64
          - name: macos-arm64
            os: macos-14
            architecture: arm64
          - name: linux
            os: ubuntu-latest
            architecture: x64

    runs-on: ${{ matrix.os }}
    environment: ${{ github.event.inputs.env || 'Development' }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        id: setup-py
        uses: actions/setup-python@v5
        with:
          # TODO: Unfreeze python version when this is resolved: https://github.com/actions/setup-python/issues/886
          python-version: "3.12"
          check-latest: true
          cache: "pip" # Cache all pip dependency downloads
      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ matrix.os }}-tests-venv-${{ steps.setup-py.outputs.python-version }}-${{ hashFiles('**/req*.txt') }}
      - name: Create venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv ./.venv
      - name: Activate venv
        run: |
          source ./.venv/bin/activate || source ./.venv/Scripts/activate
          echo $PATH >> $GITHUB_PATH
      - name: Install venv dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          python -m pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/cross_platform_tests.py

      - name: Upload Artifact
        if: runner.os != 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.name }}
          path: logs

      # Cos mac is quirky and refuses to write to local directories like a normal OS
      - name: Upload macOS Artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.name }}
          path: "/Users/runner/Library/Application Support/Skyward Sword HD Randomizer/logs"

      # Uncomment to help test the diff command actually causes the job to fail.
      # - name: Test win log diff
      #   run: echo "TEST" >> "./logs/Strich Plaza Dovos Spoiler Log.txt"
      # - name: Upload TEST Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: logs-windows
      #     path: logs

  cross-platform-compare:
    runs-on: ubuntu-latest

    needs: [generate-logs]

    defaults:
      run:
        shell: bash

    steps:
      - name: Download all Artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.run_id }}
          github-token: ${{ github.token }}

      - name: Download logs
        uses: actions/download-artifact@v4
        with:
          pattern: logs-*
          path: logs
          # merge-multiple: true

      # - name: List all logs
      #   run: |
      #     matrix=("linux" "windows" "macos-x64" "macos-arm64")
      #     for os in "${matrix[@]}"; do
      #       ls logs/logs-$os
      #     done

      - name: Compare logs
        run: |
          matrix=("linux" "windows" "macos-x64" "macos-arm64")

          # loop file names names: ./logs-{OS}
          for linux_logfile in ./logs-linux/*.txt; do
            echo $linux_logfile
            echo $(basename "$linux_logfile")

            for os in "${matrix[@]}"; do
              # Fail if a log file can't be found
              echo $os
              other_logfile="./logs-$os/$(basename "$linux_logfile")"

              diff --strip-trailing-cr "$linux_logfile" "$other_logfile"
            done

          done
